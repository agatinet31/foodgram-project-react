name: Foodgram workflow

on: [push] 

jobs:
  tests:
    runs-on: ubuntu-20.04    
    services:
      postgres:
        image: postgres:14.0
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: foodgram
        ports:
          - 5432:5432        
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install for tests addions packets (ttf-mscorefonts, gettext)
      run: | 
        sudo apt-get update
        sudo apt-get install -y ttf-mscorefonts-installer fontconfig gettext
        sudo fc-cache -vr

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt 

    - name: Run migrations
      run: python backend/manage.py migrate

    - name: Test with Flake8 and Pytest
      run: |
        python -m flake8
        python -m pytest

  build_and_push_to_docker_hub:
      name: Push Docker image to Docker Hub
      runs-on: ubuntu-20.04
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2          
          with:
            context: ../backend
            push: true
            tags: ${{ secrets.BACKEND_IMAGE }}

  deploy:
    if: ${{ github.ref == 'refs/heads/master' }}  
    runs-on: ubuntu-20.04
    needs: build_and_push_to_docker_hub    
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker pull ${{ secrets.BACKEND_IMAGE }}
            sudo docker-compose stop
            sudo docker rm ${{ secrets.BACKEND_CONTAINER_NAME }}
            sudo docker-compose up -d
            sudo docker image prune -a -f
  
  send_message:
      runs-on: ubuntu-20.04
      needs: deploy
      steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!!!
