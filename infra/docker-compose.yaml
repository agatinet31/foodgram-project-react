version: '3.8'

services:
  db:    
    image: postgres:13.0-alpine
    restart: unless-stopped
    volumes:
      - postgres_db:/var/lib/postgresql/data/
    env_file:
      - ./.env  

  backend:
    image: agatinet/foodgram_backend:v1
    depends_on:
      - db
    restart: unless-stopped
    volumes:
      - static_data:/app/static/
      - media_data:/app/media/
      - locale_data:/app/locale/
    env_file:
      - ./.env

  frontend:
    image: agatinet/foodgram_frontend:v1
    depends_on:
      - backend
    volumes:
      - frontend_build:/app/result_build/build/

  nginx:
    image: nginx:1.21.3-alpine
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./data/nginx/log:/var/log/nginx/
      - static_data:/var/html/static/
      - media_data:/var/html/media/
      - frontend_build:/usr/share/nginx/html/
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static_data:
  media_data:
  locale_data:
  postgres_db:
  frontend_build:
